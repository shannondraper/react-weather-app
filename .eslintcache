[{"/Users/shannondraper/Documents/dev/react-weather-app/src/index.js":"1","/Users/shannondraper/Documents/dev/react-weather-app/src/App.js":"2","/Users/shannondraper/Documents/dev/react-weather-app/src/components/Settings.js":"3","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherTomorrow.js":"4","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherForecast.js":"5","/Users/shannondraper/Documents/dev/react-weather-app/src/components/LocationData.js":"6","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherToday.js":"7","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherIcon.js":"8","/Users/shannondraper/Documents/dev/react-weather-app/src/components/Clock.js":"9","/Users/shannondraper/Documents/dev/react-weather-app/src/components/DateComponent.js":"10","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherDaily.js":"11"},{"size":191,"mtime":1610898131255,"results":"12","hashOfConfig":"13"},{"size":2131,"mtime":1613235060515,"results":"14","hashOfConfig":"13"},{"size":1939,"mtime":1613074508357,"results":"15","hashOfConfig":"13"},{"size":1053,"mtime":1613074508358,"results":"16","hashOfConfig":"13"},{"size":1224,"mtime":1611112981895,"results":"17","hashOfConfig":"13"},{"size":1960,"mtime":1611256561415,"results":"18","hashOfConfig":"13"},{"size":2681,"mtime":1613074508358,"results":"19","hashOfConfig":"13"},{"size":2013,"mtime":1611095515472,"results":"20","hashOfConfig":"13"},{"size":467,"mtime":1611256576404,"results":"21","hashOfConfig":"13"},{"size":325,"mtime":1611111488485,"results":"22","hashOfConfig":"13"},{"size":1121,"mtime":1611111918230,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"eev2qm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/shannondraper/Documents/dev/react-weather-app/src/index.js",[],["50","51"],"/Users/shannondraper/Documents/dev/react-weather-app/src/App.js",["52","53"],"import './App.scss';\nimport './Switch.scss';\nimport React, { useEffect, useState, setState } from 'react';\nimport styled from 'styled-components';\nimport LocationData from './components/LocationData';\nimport WeatherToday from './components/WeatherToday';\nimport WeatherTomorrow from './components/WeatherTomorrow';\nimport WeatherForecast from './components/WeatherForecast';\nimport Settings from './components/Settings';\nimport fetch from 'node-fetch';\n\nconst Wrapper = styled.main`\n\tdisplay        : flex;\n\tflex-direction : column;\n\tmargin         : 0px auto;\n`;\n\nexport default function App() {\n\n\t// const metricURL = `https://thingproxy.freeboard.io/fetch/https://api.darksky.net/forecast/${process.env.REACT_APP_DARKSKY_KEY}/43.585891,-79.5835271?units=si`;\n\n\t// const [weatherURL, setWeatherURL] = useState(metricURL);\n\tconst [weather, setWeather] = useState(null);\n\n\t// const [clockChecked, setClockChecked] = useState(false);\n\t// const [farenheitChecked, setFarenheitChecked] = useState(false);\n\n\t// function handleTemperatureScaleChange(farenheitChecked) {\n\t// \tsetFarenheitChecked(farenheitChecked)\n\t// \tfarenheitChecked ? setWeatherURL(imperialURL) : setWeatherURL(metricURL)\n\t// }\n\n\t// api data from proxied url\n\tconst apiURL = `/weather`;\n\n\tuseEffect(() => {\n\t\tasync function fetchData() {\n\t\t\tconst response = await fetch(apiURL)\n\t\t\tconst data = await response.json();\n\t\t\tsetWeather(data)\n\t\t}\n\t\tfetchData()\n\n\t\tfetch(apiURL)\n\t\t\t.then(response => response.json())\n\t\t\t.then(json => setWeather(json))\n\t}, [])\n\n\t// trigger useEffect to re-run once real weather data is loaded\n\tif (weather === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<LocationData\n\t\t\t\t\tweather={weather}\n\t\t\t\t/>\n\t\t\t\t<Settings\n\t\t\t\t// onTempChange={handleTemperatureScaleChange}\n\t\t\t\t// farenheitChecked={farenheitChecked}\n\t\t\t\t/>\n\t\t\t\t<div className=\"flexLayout\">\n\t\t\t\t\t<WeatherToday\n\t\t\t\t\t\tweather={weather}\n\t\t\t\t\t// farenheitChecked={farenheitChecked}\n\t\t\t\t\t/>\n\t\t\t\t\t<WeatherTomorrow\n\t\t\t\t\t\tweather={weather}\n\t\t\t\t\t// farenheitChecked={farenheitChecked}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<WeatherForecast\n\t\t\t\t\tweather={weather}\n\t\t\t\t/>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}\n","/Users/shannondraper/Documents/dev/react-weather-app/src/components/Settings.js",["54","55"],"import React, { useState } from \"react\";\nimport styled from 'styled-components';\n\nconst SettingsWrapper = styled.aside`\n    position   : absolute;\n    right      : 60px;\n    top        : 30px;\n    transition : 0.2s all ease;\n    opacity    : 0.4;\n    &:hover {\n        opacity : 1;\n    }\n`;\n\nexport default function Settings({\n    // handleTemperatureScaleChange,\n    // farenheitChecked\n}) {\n    // const [farenheitChecked, setFarenheitChecked] = useState(false);\n    // const [clockChecked, setClockChecked] = useState(false);\n\n    // const updateTemperatureScale = (e) => {\n    //     setFarenheitChecked(e.target.checked)\n    //     console.log('farenheitChecked =', e.target.checked)\n    // }\n    // const updateClockScale = (e) => {\n    //     setClockChecked(e.target.checked)\n    //     console.log('ClockChecked =', e.target.checked)\n    // }\n\n    return (\n        <SettingsWrapper className=\"settings\" >\n            {/* <div>\n                <p>Is it checked? {clockChecked ? \"true\" : \"false\"}</p>\n                <label className=\"switch hour-switch\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"hour-switch\"\n                        checked={clockChecked}\n                        onChange={updateClockScale}\n                    />\n                    <span className=\"slider round\"></span>\n                </label>\n            </div> */}\n            <div>\n                {/* <p>Is it checked? {farenheitChecked ? \"true\" : \"false\"}</p> */}\n                <label className=\"switch degree-switch\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"degree-switch\"\n                    // checked={farenheitChecked}\n                    // onChange={updateTemperatureScale}\n                    />\n                    <span className=\"slider round\"></span>\n                </label>\n            </div >\n        </SettingsWrapper >\n    )\n\n}","/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherTomorrow.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherForecast.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/LocationData.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherToday.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherIcon.js",[],["56","57"],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/Clock.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/DateComponent.js",[],"/Users/shannondraper/Documents/dev/react-weather-app/src/components/WeatherDaily.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":38,"nodeType":"64","messageId":"65","endLine":3,"endColumn":46},{"ruleId":"66","severity":1,"message":"67","line":47,"column":5,"nodeType":"68","endLine":47,"endColumn":7,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"70","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":15,"column":34,"nodeType":"73","messageId":"74","endLine":18,"endColumn":2},{"ruleId":"58","replacedBy":"75"},{"ruleId":"60","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiURL'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'useState' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [apiURL]",{"range":"82","text":"83"},[1513,1515],"[apiURL]"]